{"version":3,"sources":["app.js","auth/signin.js","auth/signup.js","auth/userlinks.js","define/define.js","history/history.js","logs/logs.js","authinterceptor.js","currentuser.js","define.services.js","logs.service.js","sessiontoken.js","users.service.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["(function() {\n\tvar app = angular.module('workoutlog', [\n\t\t'ui.router',\n\t\t'workoutlog.define',\n\t\t'workoutlog.logs',\n\t\t'workoutlog.history',\n\t\t'workoutlog.auth.signup',\n\t\t'workoutlog.auth.signin',\n\t]);\n\n\tfunction config($urlRouterProvider) {\n\t\t$urlRouterProvider.otherwise('/signin');\n\t}\n\n\tconfig.$inject = [ '$urlRouterProvider' ];\n\tapp.config(config);\n\tapp.constant('API_BASE', '//localhost:3000/api/');\n})();","(function() {\n\tangular.module('workoutlog.auth.signin', [\n\t\t'ui.router'\n\t])\n\t.config(signinConfig);\n\n\tfunction signinConfig($stateProvider) {\n\t\t$stateProvider\n\t\t\t.state('signin', {\n\t\t\t\turl: '/signin',\n\t\t\t\ttemplateUrl: '/components/auth/signin.html',\n\t\t\t\tcontroller: SigninController,\n\t\t\t\tcontrollerAs: 'ctrl',\n\t\t\t\tbindToController: this\n\t\t\t});\n\t}\n\n\tsigninConfig.$inject = [ '$stateProvider' ];\n\n\tfunction SigninController( $state, UsersService ) {\n\t\tvar vm = this;\n\t\tvm.user = {};\n\t\tvm.login = function() {\n\t\t\tUsersService.login(vm.user).then(function() {\n\t\t\t\t$state.go('define');\n\t\t\t});\n\t\t};\n\t}\n\tSigninController.$inject = [ '$state', 'UsersService' ];\n})();","(function() {\n\tangular\n\t\t.module('workoutlog.auth.signup', ['ui.router'])\n\t\t.config(signupConfig);\n\n\t\tfunction signupConfig($stateProvider) {\n\t\t\t$stateProvider\n\t\t\t\t.state('signup', {\n\t\t\t\t\turl: '/signup',\n\t\t\t\t\ttemplateUrl: '/components/auth/signup.html',\n\t\t\t\t\tcontroller: SignUpController,\n\t\t\t\t\tcontrollerAs: 'ctrl',\n\t\t\t\t\tbindToController: this\n\t\t\t\t});\n\t\t}\n\n\t\tsignupConfig.$inject = ['$stateProvider'];\n\n\t\tfunction SignUpController($state, UsersService) {\n\t\t\tvar vm = this;\n\t\t\tvm.user = {};\n\t\t\tvm.submit = function() {\n\t\t\t\tUsersService.create(vm.user).then(function(response) {\n\t\t\t\t\t$state.go('define');\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\n\t\tSignUpController.$inject = [ '$state', 'UsersService' ];\n})();","(function() {\n\tangular.module('workoutlog')\n\t.directive('userlinks',\n\t\tfunction() {\n\t\t\tUserLinksController.$inject = [ '$state', 'CurrentUser', 'SessionToken' ];\n\t\t\tfunction UserLinksController($state, CurrentUser, SessionToken) {\n\t\t\t\tvar vm  = this;\n\t\t\t\tvm.user = function() {\n\t\t\t\t\treturn CurrentUser.get();\n\t\t\t\t};\n\n\t\t\t\tvm.signedIn = function() {\n\t\t\t\t\treturn !!(vm.user().id);\n\t\t\t\t};\n\n\t\t\t\tvm.logout = function() {\n\t\t\t\t\tCurrentUser.clear();\n\t\t\t\t\tSessionToken.clear();\n\t\t\t\t\t$state.go('signin');\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tscope: {},\n\t\t\t\tcontroller: UserLinksController,\n\t\t\t\tcontrollerAs: 'ctrl',\n\t\t\t\tbindToController: true,\n\t\t\t\ttemplateUrl: '/components/auth/userlinks.html'\n\t\t\t\t \n\t\t\t};\n\t\t});\n})();","(function() {\n\tangular.module('workoutlog.define', [\n\t\t'ui.router'\n\t])\n\t.config(defineConfig);\n\n\tfunction defineConfig($stateProvider) {\n\n\t\t$stateProvider\n\t\t\t.state('define', {\n\t\t\t\turl: '/define',\n\t\t\t\ttemplateUrl: '/components/define/define.html',\n\t\t\t\tcontroller: DefineController,\n\t\t\t\tcontrollerAs: 'ctrl',\n\t\t\t\tbindToController: this,\n\t\t\t\tresolve: [\n\t\t\t\t'CurrentUser', '$q', '$state',\n\t\t\t\tfunction(CurrentUser, $q, $state) {\n\t\t\t\t\tvar deferred = $q.defer();\n\t\t\t\t\tif (CurrentUser.isSignedIn()) {\n\t\t\t\t\t\tdeferred.resolve();\n\t\t\t}\telse {\n\t\t\t\tdeferred.reject();\n\t\t\t\t$state.go('signin');\n\t\t\t}\n\t\t\t\t}\n\t\t\t\t]\n\t\t\t});\n\t}\n\n\tdefineConfig.$inject = [ '$stateProvider' ];\n\n\tfunction DefineController( $state, DefineService ) {\n\t\tvar vm = this;\n\t\tvm.definition = {};\n\t\tvm.save = function() {\n\t\t\tDefineService.save(vm.definition);\n\t\t};\n\t}\n\n\tDefineController.$inject = [ '$state', 'DefineService' ];\n})();","(function(){\n\tangular.module('workoutlog.history', ['ui.router'])\n\t.config(historyConfig);\n\n\thistoryConfig.$inject = [ '$stateProvider' ];\n\tfunction historyConfig($stateProvider) {\n\t\t$stateProvider\n\t\t\t.state('history', {\n\t\t\t\turl: '/history',\n\t\t\t\ttemplateUrl: '/components/history/history.html',\n\t\t\t\tcontroller: HistoryController,\n\t\t\t\tcontrollerAs: 'ctrl',\n\t\t\t\tbindToController: this,\n\t\t\t\tresolve: {\n\t\t\t\t\tfetchHistory: [\n\t\t\t\t\t'LogsService',\n\t\t\t\t\tfunction(LogsService) {\n\t\t\t\t\t\treturn LogsService.fetch();\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\n\t\t});\n\t}\n\n\tHistoryController.$inject = [ 'LogsService' ];\n\tfunction HistoryController( LogsService ) {\n\t\tvar vm = this;\n\t\tvm.history = LogsService.get();\n\t}\n})();","(function(){\n\tangular\n\t\t.module('workoutlog.logs', ['ui.router'])\n\t\t.config(logsConfig);\n\n\tlogsConfig.$inject = [ '$stateProvider' ];\n\tfunction logsConfig($stateProvider){\n\t\t$stateProvider\n\t\t\t.state('logs', {\n\t\t\t\turl: '/logs',\n\t\t\t\ttemplateUrl: '/components/logs/logs.html',\n\t\t\t\tcontroller: LogsController,\n\t\t\t\tcontrollerAs: 'ctrl',\n\t\t\t\tbindToController: this,\n\t\t\t\tresolve: {\n\t\t\t\tgetUserDefinitions: [\n\t\t\t\t\t'DefineService',\n\t\t\t\t\tfunction(DefineService) {\n\t\t\t\t\t\treturn DefineService.fetch();\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\n\t\t});\n\t}\n\n\tLogsController.$inject = [ 'DefineService', 'LogsService' ];\n\tfunction LogsController( DefineService, LogsService ) {\n\t\tvar vm = this;\n\t\tvm.log = {};\n\t\tvm.userDefinitions = DefineService.getDefinitions();\n\t\tvm.save = function() {\n\t\t\tLogsService.save(vm.log);\n\t\t};\n\t}\n})();","(function() {\n\tangular.module('workoutlog')\n\t\t.factory('AuthInterceptor', \n\t\t\t[ 'SessionToken', 'API_BASE', \n\t\t\tfunction(SessionToken, API_BASE) {\n\t\t\t\treturn {\n\t\t\t\t\trequest: function(config) {\n\t\t\t\t\t\tvar token = SessionToken.get();\n\t\t\t\t\t\tif (token && config.url.indexOf(API_BASE) > -1) {\n\t\t\t\t\t\t\tconfig.headers['Authorization'] = token;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn config;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}]);\n\n\tangular.module('workoutlog')\n\t\t.config(['$httpProvider', function($httpProvider) {\n\t\t\treturn $httpProvider.interceptors.push('AuthInterceptor');\n\t\t}]);\n})();","(function() {\n\tangular.module('workoutlog')\n\t\t.service('CurrentUser', [ '$window', function($window) {\n\t\t\tfunction CurrentUser() {\n\t\t\t\tvar currUser = $window.localStorage.getItem('currentUser');\n\t\t\t\tif (currUser && currUser !== \"undefined\") {\n\t\t\t\t\tthis.currentUser = JSON.parse($window.localStorage.getItem('currentUser'));\n\t\t\t\t}\n\t\t\t}\n\t\t\tCurrentUser.prototype.set = function(user) {\n\t\t\t\tthis.currentUser = user;\n\t\t\t\t$window.localStorage.setItem('currentUser', JSON.stringify(user));\n\t\t\t};\n\t\t\tCurrentUser.prototype.get = function() {\n\t\t\t\treturn this.currentUser || {};\n\t\t\t};\n\t\t\tCurrentUser.prototype.clear = function() {\n\t\t\t\tthis.currentUser = undefined;\n\t\t\t\t$window.localStorage.removeItem('currentUser');\n\t\t\t};\n\t\t\tCurrentUser.prototype.isSignedIn = function() {\n\t\t\t\treturn !!this.get().id;\n\t\t\t};\n\t\t\treturn new CurrentUser();\n\t\t}]);\n})();","(function() {\n\tangular.module('workoutlog')\n\t.service('DefineService', DefineService);\n\n\tDefineService.$inject = [ '$http', 'API_BASE' ];\n\tfunction DefineService($http, API_BASE) {\n\t\tvar defineService = this;\n\t\tdefineService.userDefinitions = [];\n\n\t\tdefineService.save = function(definition) {\n\t\t\treturn $http.post(API_BASE + 'definition', {\n\t\t\t\tdefinition: definition\n\t\t\t}).then(function(response) {\n\t\t\t\tdefineService.userDefinitions.unshift(response.data);\n\t\t\t});\n\t\t};\n\n\t\tdefineService.fetch = function() {\n\t\t\treturn $http.get(API_BASE + 'definition')\n\t\t\t.then(function(response) {\n\t\t\t\tdefineService.userDefinitions = response.data;\n\t\t\t});\n\t\t};\n\n\t\tdefineService.getDefinitions = function() {\n\t\t\treturn defineService.userDefinitions;\n\t\t};\n\t}\n})();","(function() {\n\tangular.module('workoutlog')\n\t.service('LogsService', LogsService);\n\n\tLogsService.$inject = [ '$http', 'API_BASE' ];\n\tfunction LogsService($http, API_BASE) {\n\t\tvar logsService = this;\n\n\t\tlogsService.workouts = [];\n\n\t\tlogsService.save = function(log) {\n\t\t\treturn $http.post(API_BASE + 'log', {\n\t\t\t\tlog: log\n\t\t\t}).then(function(response) {\n\t\t\t\tlogsService.workouts.push(response.data);\n\t\t\t});\n\t\t};\n\n\t\tlogsService.fetch = function() {\n\t\t\treturn $http.get(API_BASE + 'log')\n\t\t\t.then(function(response) {\n\t\t\t\tlogsService.workouts = response.data;\n\t\t\t});\n\t\t};\n\n\t\tlogsService.get = function() {\n\t\t\treturn logsService.workouts;\n\t\t};\n\t}\n})();","(function() {\n\tangular.module('workoutlog')\n\t\t.service('SessionToken', [ '$window', function($window) {\n\t\t\tfunction SessionToken() {\n\t\t\t\tthis.sessionToken = $window.localStorage.getItem('sessionToken');\n\t\t\t}\n\t\t\tSessionToken.prototype.set = function(token) {\n\t\t\t\tthis.sessionToken = token;\n\t\t\t\t$window.localStorage.setItem('sessionToken', token);\n\t\t\t};\n\t\t\tSessionToken.prototype.get = function() {\n\t\t\t\treturn this.sessionToken;\n\t\t\t};\n\t\t\tSessionToken.prototype.clear = function() {\n\t\t\t\tthis.sessionToken = undefined;\n\t\t\t\t$window.localStorage.removeItem('sessionToken');\n\t\t\t};\n\t\t\treturn new SessionToken();\n\t\t}]);\n})();","(function() {\n\tangular.module('workoutlog')\n\t\t.service('UsersService', [\n\t\t\t'$http', 'API_BASE', 'SessionToken', 'CurrentUser',\n\t\t\tfunction($http, API_BASE, SessionToken, CurrentUser) {\n\t\t\t\tfunction UsersService() {\n\t\t\t\t}\n\n\t\t\t\tUsersService.prototype.create = function(user) {\n\t\t\t\t\tvar userPromise = $http.post(API_BASE + 'user', {\n\t\t\t\t\t\tuser: user\n\t\t\t\t\t});\n\n\t\t\t\t\tuserPromise.then(function(response) {\n\t\t\t\t\t\tSessionToken.set(response.data.sessionToken);\n\t\t\t\t\t\tCurrentUser.set(response.data.user);\n\t\t\t\t\t});\n\t\t\t\t\treturn userPromise;\n\t\t\t\t};\n\n\t\t\t\tUsersService.prototype.login = function(user) {\n\t\t\t\t\tvar loginPromise = $http.post(API_BASE + 'login', {\n\t\t\t\t\t\tuser: user\n\t\t\t\t\t});\n\t\t\t\t\tloginPromise.then(function(response) {\n\t\t\t\t\t\tSessionToken.set(response.data.sessionToken);\n\t\t\t\t\t\tCurrentUser.set(response.data.user);\n\t\t\t\t\t});\n\t\t\t\t\treturn loginPromise;\n\t\t\t\t};\n\n\t\t\t\treturn new UsersService();\n\t\t\t}]);\n})();"],"sourceRoot":"/source/"}